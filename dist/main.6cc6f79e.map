{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","$input","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.6cc6f79e.map","sourceRoot":"../src","sourcesContent":["const $siteList = $(\".siteList\");\nconst $lastLi = $siteList.find(\"li.last\");\nconst x = localStorage.getItem(\"x\");\nconst xObject = JSON.parse(x); //转化为对象\nconst $input = $(\".input\");\n\n//声明hashMap并设置保底为后面读取localStorage的hashMap做准备\nconst hashMap = xObject || [\n  { logo: \"Z\", url: \"https://zhihu.com\" },\n  {\n    logo: \"B\",\n    url: \"https://bilibili.com\",\n  },\n  { logo: \"J\", url: \"https://juejin.cn\" },\n  { logo: \"G\", url: \"https://github.com\" },\n  { logo: \"I\", url: \"https://iconfont.cn\" },\n  { logo: \"F\", url: \"https://figma.com\" },\n];\n\nconst simplifyUrl = (url) => {\n  return url\n    .replace(\"https://\", \"\")\n    .replace(\"http://\", \"\")\n    .replace(\"www.\", \"\")\n    .replace(/\\/.*/, \"\"); //用空字符串代替https://或http://或www.并删除以/开头的内容\n};\nconst render = () => {\n  $siteList.find(\"li:not(.last)\").remove(); //删除以前的li，重新渲染新的hashMap，但不能删除最后一个增加按钮\n  //遍历hashmap并渲染\n  hashMap.forEach((node, index) => {\n    const $li = $(`<li>\n        <div class=\"site\">\n            <div class=\"logo\">${node.logo}</div>\n            <div class=\"link\">${simplifyUrl(node.url)}</div>\n            <div class=\"close\">\n             <svg class=\"icon\">\n              <use xlink:href=\"#icon-close\"></use>\n             </svg>\n            </div> \n        </div>\n  </li>\n  `).insertBefore($lastLi);\n    $li.on(\"click\", () => {\n      //点击时打开一个新窗口,相当于a标签\n      window.open(node.url);\n    });\n    $li.on(\"click\", \".close\", (e) => {\n      e.stopPropagation(); //阻止冒泡，作用是不告诉a标签该icon被点击时触发链接\n      hashMap.splice(index, 1); //从index这里删，删一个\n      render();\n    });\n  });\n};\n\nrender(); //初始界面先render\n//对.addButton设置一个事件监听\n$(\".addButton\").on(\"click\", () => {\n  let url = window.prompt(\"请问你要添加的网址是什么\"); //用prompt这个全局方法来问用户\n  if (url.indexOf(\"http\") !== 0) {\n    // alert(\"请输入http开头的网址\");//提醒用户输入http开头的\n    url = \"https://\" + url;\n  }\n  console.log(url);\n  hashMap.push({ logo: simplifyUrl(url)[0].toUpperCase(), url: url }); //在hashMap里面新增用户输入的网址,并让输入网址的第一个字符大写\n  render(); //新增完以后，再执行渲染hashMap的函数render\n});\n//在用户关闭页面之前监听，关闭页面时会把当前的hashMap存到x里面\nwindow.onbeforeunload = () => {\n  //localStorage只能存储字符串，所以先把hashMap转化为字符串,运用到的API是 JSON.stringify()\n  const string = JSON.stringify(hashMap);\n  //localStorage是个全局变量\n  localStorage.setItem(\"x\", string); //在本地的存储里面设置一个x，里面存放这个字符串\n};\n\n//键盘监听事件\n$(document).on(\"keypress\", (e) => {\n  const { key } = e;\n  console.log(key);\n  for (let i = 0; i < hashMap.length; i++) {\n    if (hashMap[i].logo.toLowerCase() === key) {\n      window.open(hashMap[i].url);\n    }\n  }\n});\n$input.on(\"keypress\", (e) => {\n  console.log(\"运行\"); //键盘事件在输入框中输入也会导致跳转，所以需要加入一个阻止冒泡的操作\n  e.stopPropagation();\n});\n"]}